{"version":3,"sources":["app/modules/UserProfile/AccountInformation.js","app/modules/UserProfile/ProfileOverview.js","app/modules/UserProfile/ChangePassword.js","app/modules/UserProfile/PersonaInformation.js","app/modules/UserProfile/EmailSettings.js","app/modules/UserProfile/components/ProfileCard.js","app/modules/UserProfile/UserProfilePage.js"],"names":["connect","auth","props","useState","loading","setloading","dispatch","useDispatch","user","useSelector","state","shallowEqual","useEffect","initialValues","username","email","language","timeZone","communicationEmail","communication","communicationSMS","sms","communicationPhone","phone","Schema","Yup","shape","required","getInputClasses","fieldname","formik","touched","errors","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","updatedUser","Object","assign","setUser","setTimeout","saveUser","onReset","resetForm","className","handleSubmit","type","disabled","isSubmitting","isValid","to","name","getFieldProps","placeholder","href","value","checked","onChange","handleChange","ProfileOverview","isError","setisError","currentPassword","password","cPassword","when","is","val","length","then","oneOf","role","src","toAbsoluteUrl","onClick","data-dismiss","aria-label","aria-hidden","pic","setPic","firstname","lastname","companyName","website","id","style","backgroundImage","data-action","data-toggle","title","data-original-title","accept","emailNotification","emailSettings","sendCopyToPersonalEmail","youHaveNewNotifications","activityRelatesEmail","youAreSentADirectMessage","someoneAddsYouAsAsAConnection","uponNewOrder","newMembershipApproval","memberRegistration","newsAboutKeenthemesProductsAndFeatureUpdates","updatesFromKeenthemes","tipsOnGettingMoreOutOfKeen","thingsYouMissedSindeYouLastLoggedIntoKeen","newsAboutMetronicOnPartnerProductsAndOtherServices","tipsOnMetronicBusinessProducts","ProfileCard","Dropdown","alignRight","Toggle","variant","as","DropdownCustomToggler","Menu","occupation","address","city","activeClassName","OverlayTrigger","placement","overlay","Tooltip","UserProfilePage","useSubheader","setTitle","from","exact","path","component","AccountInformation","ChangePassword","EmailSettings","PersonaInformation"],"mappings":"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","file":"static/js/10.1ee9aa1c.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction AccountInformation(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      username: values.username,\r\n      email: values.email,\r\n      language: values.language,\r\n      timeZone: values.timeZone,\r\n      communication: {\r\n        email: values.communicationEmail,\r\n        sms: values.communicationSMS,\r\n        phone: values.communicationPhone,\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    username: user.username,\r\n    email: user.email,\r\n    language: user.language,\r\n    timeZone: user.timeZone,\r\n    communicationEmail: user.communication.email,\r\n    communicationSMS: user.communication.sms,\r\n    communicationPhone: user.communication.phone,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    language: Yup.string(),\r\n    timeZone: Yup.string(),\r\n    communicationEmail: Yup.bool(),\r\n    communicationSMS: Yup.bool(),\r\n    communicationPhone: Yup.bool(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Account Information\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your account settings\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Heading */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Account:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Username</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"username\"\r\n                  )}`}\r\n                  name=\"username\"\r\n                  {...formik.getFieldProps(\"username\")}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                  <div className=\"invalid-feedback\">\r\n                    {formik.errors.username}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email Address\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n                ) : null}\r\n              </div>\r\n              <span className=\"form-text text-muted\">\r\n                Email will not be publicly displayed.{` `}\r\n                <a href=\"#\" className=\"font-weight-bold\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Language</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"language\"\r\n                {...formik.getFieldProps(\"language\")}\r\n              >\r\n                <option>Select Language...</option>\r\n                <option value=\"id\">Bahasa Indonesia - Indonesian</option>\r\n                <option value=\"msa\">Bahasa Melayu - Malay</option>\r\n                <option value=\"ca\">Català - Catalan</option>\r\n                <option value=\"cs\">Čeština - Czech</option>\r\n                <option value=\"da\">Dansk - Danish</option>\r\n                <option value=\"de\">Deutsch - German</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"en-gb\">English UK - British English</option>\r\n                <option value=\"es\">Español - Spanish</option>\r\n                <option value=\"eu\">Euskara - Basque (beta)</option>\r\n                <option value=\"fil\">Filipino</option>\r\n                <option value=\"fr\">Français - French</option>\r\n                <option value=\"pt\">Português - Portuguese</option>\r\n                <option value=\"ro\">Română - Romanian</option>\r\n                <option value=\"ru\">Русский - Russian</option>\r\n                <option value=\"sr\">Српски - Serbian</option>\r\n                <option value=\"uk\">Українська мова - Ukrainian</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Time Zone\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"timeZone\"\r\n                {...formik.getFieldProps(\"timeZone\")}\r\n              >\r\n                <option value=\"International Date Line West\">\r\n                  (GMT-11:00) International Date Line West\r\n                </option>\r\n                <option value=\"Midway Island\">(GMT-11:00) Midway Island</option>\r\n\r\n                <option value=\"Central America\">\r\n                  (GMT-06:00) Central America\r\n                </option>\r\n                <option value=\"Central Time (US &amp; Canada)\">\r\n                  (GMT-05:00) Central Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Eastern Time (US &amp; Canada)\">\r\n                  (GMT-04:00) Eastern Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Indiana (East)\">\r\n                  (GMT-04:00) Indiana (East)\r\n                </option>\r\n\r\n                <option value=\"Georgetown\">(GMT-04:00) Georgetown</option>\r\n\r\n                <option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\r\n                <option value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\r\n                <option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\r\n                <option value=\"Cape Verde Is.\">\r\n                  (GMT-01:00) Cape Verde Is.\r\n                </option>\r\n                <option value=\"UTC\">(GMT) UTC</option>\r\n                <option value=\"Dublin\">(GMT+01:00) Dublin</option>\r\n                <option value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\r\n                <option value=\"London\">(GMT+01:00) London</option>\r\n                <option value=\"Prague\">(GMT+02:00) Prague</option>\r\n                <option value=\"Helsinki\">(GMT+03:00) Helsinki</option>\r\n                <option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\r\n                <option value=\"Tehran\">(GMT+04:30) Tehran</option>\r\n                <option value=\"Islamabad\">(GMT+05:00) Islamabad</option>\r\n                <option value=\"Karachi\">(GMT+05:00) Karachi</option>\r\n                <option value=\"Tashkent\">(GMT+05:00) Tashkent</option>\r\n                <option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\r\n                <option value=\"Astana\">(GMT+06:00) Astana</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Communication\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationEmail\"\r\n                    checked={formik.values.communicationEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Email\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationSMS\"\r\n                    checked={formik.values.communicationSMS}\r\n                    {...formik.getFieldProps(\"communicationSMS\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>SMS\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationPhone\"\r\n                    checked={formik.values.communicationPhone}\r\n                    {...formik.getFieldProps(\"communicationPhone\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Phone\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"separator separator-dashed my-5\"></div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Security:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Login verification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bold btn-sm\"\r\n              >\r\n                Setup login verification\r\n              </button>\r\n              <p className=\"form-text text-muted pt-2\">\r\n                After you log in, you will be asked for additional information\r\n                to confirm your identity and protect your account from being\r\n                compromised. {` `}\r\n                <a href=\"#\" className=\"font-weight-bold\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Password reset verification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox m-0\">\r\n                  <input type=\"checkbox\" />\r\n                  <span></span>Require personal information to reset your\r\n                  password.\r\n                </label>\r\n              </div>\r\n              <p className=\"form-text text-muted py-2\">\r\n                For extra security, this requires you to confirm your email or\r\n                phone number when you reset your password.\r\n                <a href=\"#\" className=\"font-weight-boldk\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-danger font-weight-bold btn-sm\"\r\n              >\r\n                Deactivate your account ?\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\nexport default connect(null, auth.actions)(AccountInformation);\r\n","import React from \"react\";\r\nimport { AdvanceTablesWidget7, ListsWidget10, ListsWidget14 } from '../../../_metronic/_partials/widgets';\r\n// import { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nexport function ProfileOverview() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-6\">\r\n        <ListsWidget14 className=\"card-stretch gutter-b\"></ListsWidget14>\r\n      </div>\r\n      <div className=\"col-lg-6\">\r\n        <ListsWidget10 className=\"card-stretch gutter-b\"></ListsWidget10>\r\n      </div>\r\n      <div className=\"col-lg-12\">\r\n        <AdvanceTablesWidget7 className=\"card-stretch gutter-b\"></AdvanceTablesWidget7>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction ChangePassword(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    setisError(false);\r\n    const updatedUser = Object.assign(user, {\r\n      password: values.password,\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      setisError(true);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    currentPassword: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    currentPassword: Yup.string().required(\"Current password is required\"),\r\n    password: Yup.string().required(\"New Password is required\"),\r\n    cPassword: Yup.string()\r\n      .required(\"Password confirmation is required\")\r\n      .when(\"password\", {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Password and Confirm Password didn't match\"\r\n        ),\r\n      }),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Change Password\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your account password\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Alert */}\r\n          {isError && (\r\n            <div\r\n              className=\"alert alert-custom alert-light-danger fade show mb-10\"\r\n              role=\"alert\"\r\n            >\r\n              <div className=\"alert-icon\">\r\n                <span className=\"svg-icon svg-icon-3x svg-icon-danger\">\r\n                  <SVG\r\n                    src={toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")}\r\n                  ></SVG>{\" \"}\r\n                </span>\r\n              </div>\r\n              <div className=\"alert-text font-weight-bold\">\r\n                Configure user passwords to expire periodically. Users will need\r\n                warning that their passwords are going to expire,\r\n                <br />\r\n                or they might inadvertently get locked out of the system!\r\n              </div>\r\n              <div className=\"alert-close\" onClick={() => setisError(false)}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">\r\n                    <i className=\"ki ki-close\"></i>\r\n                  </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* end::Alert */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Current Password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Current Password\"\r\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\r\n                  \"currentPassword\"\r\n                )}`}\r\n                name=\"currentPassword\"\r\n                {...formik.getFieldProps(\"currentPassword\")}\r\n              />\r\n              {formik.touched.currentPassword &&\r\n              formik.errors.currentPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.currentPassword}\r\n                </div>\r\n              ) : null}\r\n              <a href=\"#\" className=\"text-sm font-weight-bold\">\r\n                Forgot password ?\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              New Password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"password\"\r\n                )}`}\r\n                name=\"password\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Verify Password\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Verify Password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"cPassword\"\r\n                )}`}\r\n                name=\"cPassword\"\r\n                {...formik.getFieldProps(\"cPassword\")}\r\n              />\r\n              {formik.touched.cPassword && formik.errors.cPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.cPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(ChangePassword);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction PersonaInformation(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [pic, setPic] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {\r\n    if (user.pic) {\r\n      setPic(user.pic);\r\n    }\r\n  }, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, values);\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    pic: user.pic,\r\n    firstname: user.firstname,\r\n    lastname: user.lastname,\r\n    companyName: user.companyName,\r\n    phone: user.phone,\r\n    email: user.email,\r\n    website: user.website,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    pic: Yup.string(),\r\n    firstname: Yup.string().required(\"First name is required\"),\r\n    lastname: Yup.string().required(\"Last name is required\"),\r\n    companyName: Yup.string(),\r\n    phone: Yup.string().required(\"Phone is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    website: Yup.string(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n  const getUserPic = () => {\r\n    if (!pic) {\r\n      return \"none\";\r\n    }\r\n\r\n    return `url(${pic})`;\r\n  };\r\n  const removePic = () => {\r\n    setPic(\"\");\r\n  };\r\n  return (\r\n    <form\r\n      className=\"card card-custom card-stretch\"\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Personal Information\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Update your personal informaiton\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        {/* begin::Body */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Customer Info</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Avatar</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div\r\n                className=\"image-input image-input-outline\"\r\n                id=\"kt_profile_avatar\"\r\n                style={{\r\n                  backgroundImage: `url(${toAbsoluteUrl(\r\n                    \"/media/users/blank.png\"\r\n                  )}`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"image-input-wrapper\"\r\n                  style={{ backgroundImage: `${getUserPic()}` }}\r\n                />\r\n                <label\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"change\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Change avatar\"\r\n                >\r\n                  <i className=\"fa fa-pen icon-sm text-muted\"></i>\r\n                  <input\r\n                    type=\"file\"\r\n                    // name=\"pic\"\r\n                    accept=\".png, .jpg, .jpeg\"\r\n                    // {...formik.getFieldProps(\"pic\")}\r\n                  />\r\n                  <input type=\"hidden\" name=\"profile_avatar_remove\" />\r\n                </label>\r\n                <span\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"cancel\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Cancel avatar\"\r\n                >\r\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                </span>\r\n                <span\r\n                  onClick={removePic}\r\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                  data-action=\"remove\"\r\n                  data-toggle=\"tooltip\"\r\n                  title=\"\"\r\n                  data-original-title=\"Remove avatar\"\r\n                >\r\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                </span>\r\n              </div>\r\n              <span className=\"form-text text-muted\">\r\n                Allowed file types: png, jpg, jpeg.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              First Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"First name\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"firstname\"\r\n                )}`}\r\n                name=\"firstname\"\r\n                {...formik.getFieldProps(\"firstname\")}\r\n              />\r\n              {formik.touched.firstname && formik.errors.firstname ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.firstname}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Last Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Last name\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"lastname\"\r\n                )}`}\r\n                name=\"lastname\"\r\n                {...formik.getFieldProps(\"lastname\")}\r\n              />\r\n              {formik.touched.lastname && formik.errors.lastname ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.lastname}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Company Name\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Company name\"\r\n                className={`form-control form-control-lg form-control-solid`}\r\n                name=\"companyName\"\r\n                {...formik.getFieldProps(\"companyName\")}\r\n              />\r\n              <span className=\"form-text text-muted\">\r\n                If you want your invoices addressed to a company. Leave blank to\r\n                use your full name.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mt-10 mb-6\">Contact Info</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Contact Phone\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-phone\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"+1(123)112-11-11\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"phone\"\r\n                  )}`}\r\n                  name=\"phone\"\r\n                  {...formik.getFieldProps(\"phone\")}\r\n                />\r\n              </div>\r\n              {formik.touched.phone && formik.errors.phone ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.phone}\r\n                </div>\r\n              ) : null}\r\n              <span className=\"form-text text-muted\">\r\n                We'll never share your phone with anyone else.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email Address\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n              </div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Company Site\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"https://keenthemes.com\"\r\n                  className={`form-control form-control-lg form-control-solid`}\r\n                  name=\"website\"\r\n                  {...formik.getFieldProps(\"website\")}\r\n                />\r\n              </div>\r\n              {formik.touched.website && formik.errors.website ? (\r\n                <div className=\"invalid-feedback display-block\">\r\n                  {formik.errors.website}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* end::Body */}\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(PersonaInformation);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction EmailSettings(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      emailSettings: {\r\n        emailNotification: values.emailNotification,\r\n        sendCopyToPersonalEmail: values.sendCopyToPersonalEmail,\r\n        activityRelatesEmail: {\r\n          youHaveNewNotifications: values.youHaveNewNotifications,\r\n          youAreSentADirectMessage: values.youAreSentADirectMessage,\r\n          someoneAddsYouAsAsAConnection: values.someoneAddsYouAsAsAConnection,\r\n          uponNewOrder: values.uponNewOrder,\r\n          newMembershipApproval: values.newMembershipApproval,\r\n          memberRegistration: values.memberRegistration,\r\n        },\r\n        updatesFromKeenthemes: {\r\n          newsAboutKeenthemesProductsAndFeatureUpdates:\r\n            values.newsAboutKeenthemesProductsAndFeatureUpdates,\r\n          tipsOnGettingMoreOutOfKeen: values.tipsOnGettingMoreOutOfKeen,\r\n          thingsYouMissedSindeYouLastLoggedIntoKeen:\r\n            values.thingsYouMissedSindeYouLastLoggedIntoKeen,\r\n          newsAboutMetronicOnPartnerProductsAndOtherServices:\r\n            values.newsAboutMetronicOnPartnerProductsAndOtherServices,\r\n          tipsOnMetronicBusinessProducts: values.tipsOnMetronicBusinessProducts,\r\n        },\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    emailNotification: user.emailSettings.emailNotification,\r\n    sendCopyToPersonalEmail: user.emailSettings.sendCopyToPersonalEmail,\r\n    youHaveNewNotifications:\r\n      user.emailSettings.activityRelatesEmail.youHaveNewNotifications,\r\n    youAreSentADirectMessage:\r\n      user.emailSettings.activityRelatesEmail.youAreSentADirectMessage,\r\n    someoneAddsYouAsAsAConnection:\r\n      user.emailSettings.activityRelatesEmail.someoneAddsYouAsAsAConnection,\r\n    uponNewOrder: user.emailSettings.activityRelatesEmail.uponNewOrder,\r\n    newMembershipApproval:\r\n      user.emailSettings.activityRelatesEmail.newMembershipApproval,\r\n    memberRegistration:\r\n      user.emailSettings.activityRelatesEmail.memberRegistration,\r\n    newsAboutKeenthemesProductsAndFeatureUpdates:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .newsAboutKeenthemesProductsAndFeatureUpdates,\r\n    tipsOnGettingMoreOutOfKeen:\r\n      user.emailSettings.updatesFromKeenthemes.tipsOnGettingMoreOutOfKeen,\r\n    thingsYouMissedSindeYouLastLoggedIntoKeen:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .thingsYouMissedSindeYouLastLoggedIntoKeen,\r\n    newsAboutMetronicOnPartnerProductsAndOtherServices:\r\n      user.emailSettings.updatesFromKeenthemes\r\n        .newsAboutMetronicOnPartnerProductsAndOtherServices,\r\n    tipsOnMetronicBusinessProducts:\r\n      user.emailSettings.updatesFromKeenthemes.tipsOnMetronicBusinessProducts,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    emailNotification: Yup.bool(),\r\n    sendCopyToPersonalEmail: Yup.bool(),\r\n    youHaveNewNotifications: Yup.bool(),\r\n    youAreSentADirectMessage: Yup.bool(),\r\n    someoneAddsYouAsAsAConnection: Yup.bool(),\r\n    uponNewOrder: Yup.bool(),\r\n    newMembershipApproval: Yup.bool(),\r\n    memberRegistration: Yup.bool(),\r\n    newsAboutKeenthemesProductsAndFeatureUpdates: Yup.bool(),\r\n    tipsOnGettingMoreOutOfKeen: Yup.bool(),\r\n    thingsYouMissedSindeYouLastLoggedIntoKeen: Yup.bool(),\r\n    newsAboutMetronicOnPartnerProductsAndOtherServices: Yup.bool(),\r\n    tipsOnMetronicBusinessProducts: Yup.bool(),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Email Settings\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your email settings\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Setup Email Notification:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Email Notification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className=\"switch switch-sm\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"emailNotification\"\r\n                    checked={formik.values.emailNotification}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Send Copy To Personal Email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <span className=\"switch switch-sm\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sendCopyToPersonalEmail\"\r\n                    checked={formik.values.sendCopyToPersonalEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"separator separator-dashed my-10\"></div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Activity Related Emails:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              When To Email\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"youHaveNewNotifications\"\r\n                    checked={formik.values.youHaveNewNotifications}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>You have new notifications\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"youAreSentADirectMessage\"\r\n                    checked={formik.values.youAreSentADirectMessage}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>You're sent a direct message\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"someoneAddsYouAsAsAConnection\"\r\n                    checked={formik.values.someoneAddsYouAsAsAConnection}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Someone adds you as a connection\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              When To Escalate Emails\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"uponNewOrder\"\r\n                    checked={formik.values.uponNewOrder}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Upon new order\r\n                </label>\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newMembershipApproval\"\r\n                    checked={formik.values.newMembershipApproval}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>New membership approval\r\n                </label>\r\n                <label className=\"checkbox checkbox-primary\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"memberRegistration\"\r\n                    checked={formik.values.memberRegistration}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Member registration\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"separator separator-dashed my-10\"></div>\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">\r\n                Updates From Keenthemes:\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\r\n              Email You With\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-list\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsAboutKeenthemesProductsAndFeatureUpdates\"\r\n                    checked={\r\n                      formik.values.newsAboutKeenthemesProductsAndFeatureUpdates\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>News about Keenthemes products and feature\r\n                  updates\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"tipsOnGettingMoreOutOfKeen\"\r\n                    checked={formik.values.tipsOnGettingMoreOutOfKeen}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Tips on getting more out of Keen\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"thingsYouMissedSindeYouLastLoggedIntoKeen\"\r\n                    checked={\r\n                      formik.values.thingsYouMissedSindeYouLastLoggedIntoKeen\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Things you missed since you last logged into Keen\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsAboutMetronicOnPartnerProductsAndOtherServices\"\r\n                    checked={\r\n                      formik.values\r\n                        .newsAboutMetronicOnPartnerProductsAndOtherServices\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>News about Metronic on partner products and other\r\n                  services\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"tipsOnMetronicBusinessProducts\"\r\n                    checked={formik.values.tipsOnMetronicBusinessProducts}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Tips on Metronic business products\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(EmailSettings);\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Dropdown, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport {\r\n  DropdownCustomToggler,\r\n  DropdownMenu4,\r\n} from \"../../../../_metronic/_partials/dropdowns\";\r\n\r\nexport function ProfileCard() {\r\n  const user = useSelector(({ auth }) => auth.user, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <div\r\n          className=\"flex-row-auto offcanvas-mobile w-250px w-xxl-350px\"\r\n          id=\"kt_profile_aside\"\r\n        >\r\n          <div className=\"card card-custom card-stretch\">\r\n            {/* begin::Body */}\r\n            <div className=\"card-body pt-4\">\r\n              {/* begin::Toolbar */}\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Dropdown className=\"dropdown dropdown-inline\" alignRight>\r\n                  <Dropdown.Toggle\r\n                    className=\"btn btn-clean btn-hover-light-primary btn-sm btn-icon cursor-pointer\"\r\n                    variant=\"transparent\"\r\n                    id=\"dropdown-toggle-top-user-profile\"\r\n                    as={DropdownCustomToggler}\r\n                  >\r\n                    <i className=\"ki ki-bold-more-hor\"></i>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu className=\"dropdown-menu dropdown-menu-sm dropdown-menu-right\">\r\n                    <DropdownMenu4></DropdownMenu4>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n              {/* end::Toolbar */}\r\n              {/* begin::User */}\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-60 symbol-xxl-100 mr-5 align-self-start align-self-xxl-center\">\r\n                  <div\r\n                    className=\"symbol-label\"\r\n                    style={{ backgroundImage: `url(${user.pic})` }}\r\n                  ></div>\r\n                  {/* style=\"background-i\r\n                  mage:url('/metronic/theme/html/demo1/dist/assets/media/users/300_21.jpg')\" */}\r\n                  <i className=\"symbol-badge bg-success\"></i>\r\n                </div>\r\n                <div>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"font-weight-bolder font-size-h5 text-dark-75 text-hover-primary\"\r\n                  >\r\n                    {user.firstname} {user.lastname}\r\n                  </a>\r\n                  <div className=\"text-muted\">{user.occupation}</div>\r\n                  <div className=\"mt-2\">\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"btn btn-sm btn-primary font-weight-bold mr-2 py-2 px-3 px-xxl-5 my-1\"\r\n                    >\r\n                      Chat\r\n                    </a>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"btn btn-sm btn-success font-weight-bold py-2 px-3 px-xxl-5 my-1\"\r\n                    >\r\n                      Follow\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* end::User */}\r\n              {/* begin::Contact */}\r\n              <div className=\"py-9\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <span className=\"font-weight-bold mr-2\">Email:</span>\r\n                  <span className=\"text-muted text-hover-primary\">\r\n                    {user.email}\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <span className=\"font-weight-bold mr-2\">Phone:</span>\r\n                  <span className=\"text-muted\">{user.phone}</span>\r\n                </div>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <span className=\"font-weight-bold mr-2\">Location:</span>\r\n                  <span className=\"text-muted\">{user.address.city}</span>\r\n                </div>\r\n              </div>\r\n              {/* end::Contact */}\r\n              {/* begin::Nav */}\r\n              <div className=\"navi navi-bold navi-hover navi-active navi-link-rounded\">\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/profile-overview\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Design/Layers.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Profile Overview\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/personal-information\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/General/User.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Personal Information\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/account-information\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Code/Compiling.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Account Information\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/change-password\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Communication/Shield-user.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Change Password\r\n                    </span>\r\n                    <span className=\"navi-label\">\r\n                      <span className=\"label label-light-danger label-rounded font-weight-bold\">\r\n                        5\r\n                      </span>\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <NavLink\r\n                    to=\"/user-profile/email-settings\"\r\n                    className=\"navi-link py-4\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <span className=\"navi-icon mr-2\">\r\n                      <span className=\"svg-icon\">\r\n                        <SVG\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/icons/Communication/Mail-opened.svg\"\r\n                          )}\r\n                        ></SVG>{\" \"}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"navi-text font-size-lg\">\r\n                      Email settings\r\n                    </span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <OverlayTrigger\r\n                    placement=\"right\"\r\n                    overlay={<Tooltip>Coming soon...</Tooltip>}\r\n                  >\r\n                    <a href=\"#\" className=\"navi-link py-4\">\r\n                      <span className=\"navi-icon mr-2\">\r\n                        <span className=\"svg-icon\">\r\n                          <SVG\r\n                            src={toAbsoluteUrl(\r\n                              \"/media/svg/icons/Layout/Layout-top-panel-6.svg\"\r\n                            )}\r\n                          ></SVG>{\" \"}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"navi-text font-size-lg\">\r\n                        Saved Credit Cards\r\n                      </span>\r\n                    </a>\r\n                  </OverlayTrigger>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <OverlayTrigger\r\n                    placement=\"right\"\r\n                    overlay={<Tooltip>Coming soon...</Tooltip>}\r\n                  >\r\n                    <a href=\"#\" className=\"navi-link py-4\">\r\n                      <span className=\"navi-icon mr-2\">\r\n                        <span className=\"svg-icon\">\r\n                          <SVG\r\n                            src={toAbsoluteUrl(\r\n                              \"/media/svg/icons/Files/File.svg\"\r\n                            )}\r\n                          ></SVG>{\" \"}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"navi-text font-size-lg\">\r\n                        Tax information\r\n                      </span>\r\n                      <span className=\"navi-label\">\r\n                        <span className=\"label label-light-primary label-inline font-weight-bold\">\r\n                          new\r\n                        </span>\r\n                      </span>\r\n                    </a>\r\n                  </OverlayTrigger>\r\n                </div>\r\n                <div className=\"navi-item mb-2\">\r\n                  <OverlayTrigger\r\n                    placement=\"right\"\r\n                    overlay={<Tooltip>Coming soon...</Tooltip>}\r\n                  >\r\n                    <a href=\"#\" className=\"navi-link py-4\">\r\n                      <span className=\"navi-icon mr-2\">\r\n                        <span className=\"svg-icon\">\r\n                          <SVG\r\n                            src={toAbsoluteUrl(\r\n                              \"/media/svg/icons/Text/Article.svg\"\r\n                            )}\r\n                          ></SVG>{\" \"}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"navi-text\">Statements</span>\r\n                    </a>\r\n                  </OverlayTrigger>\r\n                </div>\r\n              </div>\r\n              {/* end::Nav */}\r\n            </div>\r\n            {/* end::Body */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport AccountInformation from \"./AccountInformation\";\r\nimport { ProfileOverview } from \"./ProfileOverview\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport PersonaInformation from \"./PersonaInformation\";\r\nimport EmailSettings from \"./EmailSettings\";\r\nimport { ProfileCard } from \"./components/ProfileCard\";\r\n\r\nexport default function UserProfilePage() {\r\n  const suhbeader = useSubheader();\r\n  suhbeader.setTitle(\"User profile\");\r\n  return (\r\n    <div className=\"d-flex flex-row\">\r\n      <ProfileCard></ProfileCard>\r\n      <div className=\"flex-row-fluid ml-lg-8\">\r\n        <Switch>\r\n          <Redirect\r\n            from=\"/user-profile\"\r\n            exact={true}\r\n            to=\"/user-profile/profile-overview\"\r\n          />\r\n          <Route\r\n            path=\"/user-profile/profile-overview\"\r\n            component={ProfileOverview}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/account-information\"\r\n            component={AccountInformation}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/change-password\"\r\n            component={ChangePassword}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/email-settings\"\r\n            component={EmailSettings}\r\n          />\r\n          <Route\r\n            path=\"/user-profile/personal-information\"\r\n            component={PersonaInformation}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}